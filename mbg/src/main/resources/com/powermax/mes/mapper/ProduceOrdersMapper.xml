<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powermax.mes.mapper.ProduceOrdersMapper">
  <resultMap id="BaseResultMap" type="com.powermax.mes.model.ProduceOrders">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_num" jdbcType="VARCHAR" property="orderNum" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="count" jdbcType="BIGINT" property="count" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="start_date" jdbcType="TIMESTAMP" property="startDate" />
    <result column="delivery_date" jdbcType="TIMESTAMP" property="deliveryDate" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_num, product_id, count, customer_name, start_date, delivery_date, unit_price, 
    remarks
  </sql>
  <select id="selectByExample" parameterType="com.powermax.mes.model.ProduceOrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from produce_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from produce_orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from produce_orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.powermax.mes.model.ProduceOrdersExample">
    delete from produce_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.powermax.mes.model.ProduceOrders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into produce_orders (order_num, product_id, count, 
      customer_name, start_date, delivery_date, 
      unit_price, remarks)
    values (#{orderNum,jdbcType=VARCHAR}, #{productId,jdbcType=BIGINT}, #{count,jdbcType=BIGINT}, 
      #{customerName,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, #{deliveryDate,jdbcType=TIMESTAMP}, 
      #{unitPrice,jdbcType=DECIMAL}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.powermax.mes.model.ProduceOrders">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into produce_orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        order_num,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="deliveryDate != null">
        delivery_date,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderNum != null">
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        #{count,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null">
        #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.powermax.mes.model.ProduceOrdersExample" resultType="java.lang.Long">
    select count(*) from produce_orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update produce_orders
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderNum != null">
        order_num = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=BIGINT},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryDate != null">
        delivery_date = #{record.deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update produce_orders
    set id = #{record.id,jdbcType=BIGINT},
      order_num = #{record.orderNum,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=BIGINT},
      count = #{record.count,jdbcType=BIGINT},
      customer_name = #{record.customerName,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      delivery_date = #{record.deliveryDate,jdbcType=TIMESTAMP},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.powermax.mes.model.ProduceOrders">
    update produce_orders
    <set>
      <if test="orderNum != null">
        order_num = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=BIGINT},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryDate != null">
        delivery_date = #{deliveryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.powermax.mes.model.ProduceOrders">
    update produce_orders
    set order_num = #{orderNum,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=BIGINT},
      count = #{count,jdbcType=BIGINT},
      customer_name = #{customerName,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=TIMESTAMP},
      delivery_date = #{deliveryDate,jdbcType=TIMESTAMP},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>