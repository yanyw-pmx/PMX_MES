<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.powermax.mes.mapper.SystemRfidCardsMapper">
  <resultMap id="BaseResultMap" type="com.powermax.mes.model.SystemRfidCards">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="rfid_type_id" jdbcType="INTEGER" property="rfidTypeId" />
    <result column="serial_num" jdbcType="VARCHAR" property="serialNum" />
    <result column="card_num" jdbcType="VARCHAR" property="cardNum" />
    <result column="worker_id" jdbcType="BIGINT" property="workerId" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, rfid_type_id, serial_num, card_num, worker_id, remarks
  </sql>
  <select id="selectByExample" parameterType="com.powermax.mes.model.SystemRfidCardsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from system_rfid_cards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from system_rfid_cards
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from system_rfid_cards
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.powermax.mes.model.SystemRfidCardsExample">
    delete from system_rfid_cards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.powermax.mes.model.SystemRfidCards">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into system_rfid_cards (rfid_type_id, serial_num, card_num, 
      worker_id, remarks)
    values (#{rfidTypeId,jdbcType=INTEGER}, #{serialNum,jdbcType=VARCHAR}, #{cardNum,jdbcType=VARCHAR}, 
      #{workerId,jdbcType=BIGINT}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.powermax.mes.model.SystemRfidCards">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into system_rfid_cards
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="rfidTypeId != null">
        rfid_type_id,
      </if>
      <if test="serialNum != null">
        serial_num,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="workerId != null">
        worker_id,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="rfidTypeId != null">
        #{rfidTypeId,jdbcType=INTEGER},
      </if>
      <if test="serialNum != null">
        #{serialNum,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="workerId != null">
        #{workerId,jdbcType=BIGINT},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.powermax.mes.model.SystemRfidCardsExample" resultType="java.lang.Long">
    select count(*) from system_rfid_cards
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update system_rfid_cards
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.rfidTypeId != null">
        rfid_type_id = #{record.rfidTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.serialNum != null">
        serial_num = #{record.serialNum,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNum != null">
        card_num = #{record.cardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.workerId != null">
        worker_id = #{record.workerId,jdbcType=BIGINT},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update system_rfid_cards
    set id = #{record.id,jdbcType=BIGINT},
      rfid_type_id = #{record.rfidTypeId,jdbcType=INTEGER},
      serial_num = #{record.serialNum,jdbcType=VARCHAR},
      card_num = #{record.cardNum,jdbcType=VARCHAR},
      worker_id = #{record.workerId,jdbcType=BIGINT},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.powermax.mes.model.SystemRfidCards">
    update system_rfid_cards
    <set>
      <if test="rfidTypeId != null">
        rfid_type_id = #{rfidTypeId,jdbcType=INTEGER},
      </if>
      <if test="serialNum != null">
        serial_num = #{serialNum,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="workerId != null">
        worker_id = #{workerId,jdbcType=BIGINT},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.powermax.mes.model.SystemRfidCards">
    update system_rfid_cards
    set rfid_type_id = #{rfidTypeId,jdbcType=INTEGER},
      serial_num = #{serialNum,jdbcType=VARCHAR},
      card_num = #{cardNum,jdbcType=VARCHAR},
      worker_id = #{workerId,jdbcType=BIGINT},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>